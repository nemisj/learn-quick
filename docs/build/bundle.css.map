{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { existingWords } from './words.js';\n\timport { onMount } from 'svelte';\n\n\tif (typeof window.localStorage === 'undefined') {\n\t\tthrow new Error('No localStorage support, sorry');\n\t}\n\n\tconst getVocabulary = () => {\n\t\tconst wordsStr = localStorage.getItem('words');\n\t\tlet words;\n\t\tif (wordsStr) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(wordsStr);\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tbad: [],\n\t\t\tgood: [],\n\t\t};\n\t};\n\n\tconst setVocabulary= (words) => {\n\t\tlocalStorage.setItem('words', JSON.stringify(words));\n\t};\n\n\tconst sync = () => {\n\t\tconst words = getVocabulary();\n\t\tconst wordsCount = words.bad.length + words.good.length;\n\t\tif (wordsCount === existingWords.length) {\n\t\t\t// do not do this, only if words are added\n\t\t\treturn;\n\t\t}\n\n\t\t// move all the words from existingWords to 'bad' if they're not in good\n\t\tconst goodsMap = words.good.reduce((res, { it }) => {\n\t\t\tres[it] = true;\n\t\t\treturn res;\n\t\t}, {});\n\n\t\twords.bad = [];\n\t\texistingWords.forEach((word) => {\n\t\t\tif (!goodsMap[word.it]) {\n\t\t\t\twords.bad.push(word);\t\n\t\t\t}\n\t\t});\n\n\t\tsetVocabulary(words);\n\t};\n\n\tlet flipped = '';\n\n\tlet index = -1;\n\tlet current;\n\n\tconst start = () => {\n\t\t// take the random word from bad\n\t\tconst words = getVocabulary();\n\t\tconst bad = words.bad;\n\t\tindex = Math.floor(Math.random() * bad.length);\n\t\tconsole.log('index', index);\n\t\tconst x = bad[index];\n\t\tif (x) {\n\t\t\tcurrent = [\n\t\t\t\tx.it,\n\t\t\t\tx.en,\n\t\t\t];\n\t\t} else {\n\t\t\tcurrent = undefined;\n\t\t}\n\t};\n\n\tconst next = (isGood) => {\n\t\tif (flipped) {\n\t\t\t// we are already turned. switch to the next word\n\t\t\tconst words = getVocabulary();\n\t\t\tconst the = words.bad[index];\n\t\t\tif (isGood) {\n\t\t\t\twords.good.push(the);\n\t\t\t\twords.bad.splice(index, 1);\n\t\t\t\tsetVocabulary(words);\n\t\t\t}\n\t\t\tstart();\n\t\t\tflipped = false;\n\t\t} else {\n\t\t\tflipped = true;\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\tsync();\n\t\tstart();\n\t});\n</script>\n\n<main>\n\t{#if current}\n\t<div class=\"scene\">\n\t\t<div class=\"zork {flipped && 'flipped'}\">\n\t\t\t<div class=\"text\" style=\"visibility: hidden\">{current[0].length > current[1].length ? current[0] : current[1]}</div>\n\t\t\t<h1 class=\"card text back\">{current[0]}</h1>\n\t\t\t<h1 class=\"card text front\">{current[1]}</h1>\n\t\t\t<div class=\"buttons-container\">\n\t\t\t\t<div class=\"good\" on:click=\"{() => next(true)}\" />\n\t\t\t\t<div class=\"bad\" on:click=\"{() => next(false)}\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t{/if}\n\t{#if !current}\n\t\tThere are no words anymore. Genius;\n\t{/if}\n</main>\n\n<style>\n\n\t.scene {\n\t\tperspective: 600px;\n\t}\n\n\t.buttons-container {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t}\n\n\t.buttons-container > div {\n\t\tflex-grow: 1;\n\t}\n\n\t.good {\n\t\tcursor: w-resize;\n\t}\n\n\t.bad {\n\t\tcursor: e-resize;\n\t}\n\n\t.zork {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\tperspective: 600px;\n\t\ttransform-style: preserve-3d;\n\t\ttransition: transform 2s;\n\t}\n\n\t.zork.flipped {\n\t\ttransform: rotateY( 180deg );\n\t}\n\n\t.zork.flipped .buttons-container {\n\t\ttransform: rotateY(180deg);\n\t\tcursor: inherit;\n\t}\n\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n\t}\n\n\t.card {\n\t\tposition: relative;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackface-visibility: hidden;\n\t\tbackground-color: #f4f4f4;\n\t\tborder-radius: 3px;\n\t\tborder: 1px solid #fbf2ef;\n\t}\n\n\t.text {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t\tmargin: 0;\n\t\tpadding: 1rem 0.5rem;\n\t\tbox-sizing: border-box;\n\t\tjustify-content: center;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.front {\n\t}\n\n\t.back {\n\t\ttransform: rotateY( 180deg );\n\t}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsHC,MAAM,8BAAC,CAAC,AACP,WAAW,CAAE,KAAK,AACnB,CAAC,AAED,kBAAkB,8BAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,AACd,CAAC,AAED,iCAAkB,CAAG,GAAG,eAAC,CAAC,AACzB,SAAS,CAAE,CAAC,AACb,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,MAAM,CAAE,QAAQ,AACjB,CAAC,AAED,IAAI,8BAAC,CAAC,AACL,MAAM,CAAE,QAAQ,AACjB,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,KAAK,CAClB,eAAe,CAAE,WAAW,CAC5B,UAAU,CAAE,SAAS,CAAC,EAAE,AACzB,CAAC,AAED,KAAK,QAAQ,8BAAC,CAAC,AACd,SAAS,CAAE,SAAS,MAAM,EAAE,AAC7B,CAAC,AAED,KAAK,uBAAQ,CAAC,kBAAkB,eAAC,CAAC,AACjC,SAAS,CAAE,QAAQ,MAAM,CAAC,CAC1B,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,IAAI,8BAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,mBAAmB,CAAE,MAAM,CAC3B,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC1B,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CAAC,MAAM,CACpB,UAAU,CAAE,UAAU,CACtB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACpB,CAAC,AAKD,KAAK,8BAAC,CAAC,AACN,SAAS,CAAE,SAAS,MAAM,EAAE,AAC7B,CAAC"
}